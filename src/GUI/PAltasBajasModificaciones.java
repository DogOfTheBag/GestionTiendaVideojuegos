package GUI;

import data.Tienda;
import javax.swing.JOptionPane;

/**
 *
 * @author alber
 */
public class PAltasBajasModificaciones extends javax.swing.JPanel {

    /**
     * Creates new form PAltasBajasModificaciones
     */
    Object[] opciones = {"Videojuego", "Consola"};
    VPal v;
    Tienda tienda;
    public PAltasBajasModificaciones(VPal v, Tienda tienda) {
        this.v = v;
        this.tienda = tienda;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelVacioArriba = new javax.swing.JPanel();
        panelBotones = new javax.swing.JPanel();
        botonAlta = new javax.swing.JButton();
        botonBaja = new javax.swing.JButton();
        botonModificar = new javax.swing.JButton();
        botonVolver = new javax.swing.JButton();
        panelVacioAbajo = new javax.swing.JPanel();

        setLayout(new java.awt.GridLayout(3, 1));

        javax.swing.GroupLayout panelVacioArribaLayout = new javax.swing.GroupLayout(panelVacioArriba);
        panelVacioArriba.setLayout(panelVacioArribaLayout);
        panelVacioArribaLayout.setHorizontalGroup(
            panelVacioArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        panelVacioArribaLayout.setVerticalGroup(
            panelVacioArribaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );

        add(panelVacioArriba);

        botonAlta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        botonAlta.setText("Altas");
        botonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAltaActionPerformed(evt);
            }
        });
        panelBotones.add(botonAlta);

        botonBaja.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        botonBaja.setText("Bajas");
        botonBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBajaActionPerformed(evt);
            }
        });
        panelBotones.add(botonBaja);

        botonModificar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        botonModificar.setText("Modificaciones");
        botonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonModificarActionPerformed(evt);
            }
        });
        panelBotones.add(botonModificar);

        botonVolver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        botonVolver.setText("Volver");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });
        panelBotones.add(botonVolver);

        add(panelBotones);

        javax.swing.GroupLayout panelVacioAbajoLayout = new javax.swing.GroupLayout(panelVacioAbajo);
        panelVacioAbajo.setLayout(panelVacioAbajoLayout);
        panelVacioAbajoLayout.setHorizontalGroup(
            panelVacioAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 495, Short.MAX_VALUE)
        );
        panelVacioAbajoLayout.setVerticalGroup(
            panelVacioAbajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 108, Short.MAX_VALUE)
        );

        add(panelVacioAbajo);
    }// </editor-fold>//GEN-END:initComponents

    private void botonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAltaActionPerformed
        //(Component parentComponent,Object message, String title, int optionType, int messageType, Icon icon, Object[] options, Object initialValue)
        //basicamente he hecho la misma funcion 2 veces, una para consolas y para juegos. En el futuro me convendria unificarlas en caso de añadir mas tipos de producto
        int seleccion = JOptionPane.showOptionDialog(null, "Pulsa lo que quieras introducir", "Altas", JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
        try{
            if(seleccion == 0){ //eligio videojuego
                String nombre = JOptionPane.showInputDialog("Introduce el nombre del juego");
                if (nombre == null) return; //si algun valor es null es que le ha dado a cancelar y se corta la alta
                String stringPrecio = JOptionPane.showInputDialog("Introduce el precio del juego (13.41 por ejemplo)");
                if (stringPrecio == null) return;
                String stringStock = JOptionPane.showInputDialog("Introduce el stock del juego (34 por ejemplo)");
                if (stringStock == null) return;
                String genero = JOptionPane.showInputDialog("Introduce el género del juego");
                if (genero == null) return;

                double precio = Double.parseDouble(stringPrecio);
                int stock = Integer.parseInt(stringStock);

                boolean añadido = tienda.añadirVideojuego(nombre, genero, precio, stock);
                if(añadido)
                    JOptionPane.showMessageDialog(null, "Juego añadido correctamente");
                else
                    JOptionPane.showMessageDialog(null, "No se ha podido añadir el juego");
                
            }else if(seleccion == 1){ //eligio consola
                String nombre = JOptionPane.showInputDialog("Introduce el nombre de la consola");
                if (nombre == null) return;
                String stringPrecio = JOptionPane.showInputDialog("Introduce el precio de la consola (599.99 por ejemplo)");
                if (stringPrecio == null) return;
                String stringStock = JOptionPane.showInputDialog("Introduce el stock de la consola (34 por ejemplo)");
                if (stringStock == null) return;
                String generacion = JOptionPane.showInputDialog("Introduce la generación de la consola");
                if (generacion == null) return;

                double precio = Double.parseDouble(stringPrecio);
                int stock = Integer.parseInt(stringStock);

                boolean añadido = tienda.añadirConsola(nombre, precio, stock, generacion);
                if(añadido)
                    JOptionPane.showMessageDialog(null, "Consola añadida correctamente");
                else
                    JOptionPane.showMessageDialog(null, "No se ha podido añadir la consola");
            }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Formato de precio o stock incorrectos, introduce numeros");
        }
        //de nuevo, para comprobar que ha cambiado la cantidad de productos
        System.out.println("Productos después de alta: " + tienda.getProductos().size());

    }//GEN-LAST:event_botonAltaActionPerformed

    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonVolverActionPerformed
        v.setContentPane(v.ppal);
        v.revalidate();
    }//GEN-LAST:event_botonVolverActionPerformed

    private void botonBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBajaActionPerformed
        if(tienda.getProductos().isEmpty())
            JOptionPane.showMessageDialog(null, "No se puede eliminar nada, no hay productos en la tienda");
        else{
            //comparando nombres elimina uno si encuentra uno igual, si no nada.
            String productoEliminado = JOptionPane.showInputDialog(tienda.toString() + "\nIntroduce el nombre del producto a eliminar");
            if (productoEliminado == null) return;
            boolean eliminado = tienda.eliminarProducto(productoEliminado);
            if(eliminado)
                JOptionPane.showMessageDialog(null, "Producto eliminado correctamente");
            else
                JOptionPane.showMessageDialog(null, "No se ha encontrado el producto o no existe.");
        }
    }//GEN-LAST:event_botonBajaActionPerformed

    private void botonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonModificarActionPerformed
        if(tienda.getProductos().isEmpty())
            JOptionPane.showMessageDialog(null, "No se puede modificar nada, no hay productos en la tienda");
        else{
            try{
            //el modificar es un modificar sencillo de precio y stock, dado que normalmente los productos de la tienda no cambian de nombre y género
            //se podria ampliar, hacer modify más especificos, o añadir más para dar más libertad
            String nombre = JOptionPane.showInputDialog(tienda.toString() + "\nIntroduce el nombre del producto a modificar"); 
            if (nombre == null) return;
            String stringPrecio = JOptionPane.showInputDialog("Introduce el nuevo precio del producto"); 
            if (stringPrecio == null) return;
            String stringStock = JOptionPane.showInputDialog("Introduce el nuevo stock del producto"); 
            if (stringStock == null) return;

            double nuevoPrecio = Double.parseDouble(stringPrecio);
            int nuevoStock = Integer.parseInt(stringStock);

            boolean modificado = tienda.modificarPrecioStockProducto(nombre, nuevoPrecio, nuevoStock);
            if(modificado)
                JOptionPane.showMessageDialog(null, "Producto modificado correctamente");
            else
                JOptionPane.showMessageDialog(null, "Error, no se ha encontrado el producto o no existe");
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(null, "Error al modificar: " + e.getMessage());
        }
        
            
        }
        
    }//GEN-LAST:event_botonModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAlta;
    private javax.swing.JButton botonBaja;
    private javax.swing.JButton botonModificar;
    private javax.swing.JButton botonVolver;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelVacioAbajo;
    private javax.swing.JPanel panelVacioArriba;
    // End of variables declaration//GEN-END:variables
}
